// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"planlah.sg/backend/data"
	"planlah.sg/backend/routes"
	"planlah.sg/backend/services"
	"planlah.sg/backend/utils"
)

import (
	_ "planlah.sg/backend/docs"
)

// Injectors from deps.go:

func InitializeServer() (*gin.Engine, error) {
	config, err := utils.NewConfig()
	if err != nil {
		return nil, err
	}
	db, err := data.NewDatabaseConnection(config)
	if err != nil {
		return nil, err
	}
	database := data.NewDatabase(db)
	app, err := services.NewFirebaseApp()
	if err != nil {
		return nil, err
	}
	authService, err := services.NewAuthService(database, app)
	if err != nil {
		return nil, err
	}
	baseController := routes.BaseController{
		Database: database,
		Auth:     authService,
		Config:   config,
	}
	firebaseStorageImageService, err := services.NewFirebaseStorageImageService(app)
	if err != nil {
		return nil, err
	}
	userController := routes.UserController{
		BaseController: baseController,
		ImageService:   firebaseStorageImageService,
	}
	groupsController := routes.GroupsController{
		BaseController: baseController,
		ImageService:   firebaseStorageImageService,
	}
	devPanelController := routes.DevPanelController{
		BaseController: baseController,
	}
	messageController := routes.MessageController{
		BaseController: baseController,
	}
	miscController := routes.MiscController{}
	engine, err := NewServer(userController, groupsController, devPanelController, messageController, miscController, authService)
	if err != nil {
		return nil, err
	}
	return engine, nil
}

// deps.go:

var depSet = wire.NewSet(services.NewFirebaseApp, services.NewAuthService, services.NewFirebaseStorageImageService, wire.Bind(new(services.ImageService), new(*services.FirebaseStorageImageService)), data.NewDatabaseConnection, data.NewDatabase, wire.Struct(new(routes.BaseController), "*"), wire.Struct(new(routes.UserController), "*"), wire.Struct(new(routes.GroupsController), "*"), wire.Struct(new(routes.DevPanelController), "*"), wire.Struct(new(routes.MessageController), "*"), wire.Struct(new(routes.MiscController), "*"), NewServer, utils.NewConfig)

